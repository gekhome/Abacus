@model sqlPersonInfoViewModel
@using Abacus.DAL;
@using Abacus.Models;

@{
    ViewBag.Title = "Μητρώο προσωπικού";
    Layout = "~/Views/Shared/_StationLayout.cshtml";
}

<style>
    .k-grid {
        font-size: 12px;
    }
</style>


@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Μητρώο προσωπικού</font>
    </span>
    <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Station", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
</div>

<div class="body-content" style="margin:5px 20px 5px 20px;font-size:14px;background-color:dimgray;padding:4px 4px 4px 4px;min-height:38px">
    <span style="margin-left:10px;float:left;font-family:'Segoe UI';">
        <label style="font-size:14px;font-weight:bold;color:white">Επιλογή προβολής : </label>
        @(Html.Kendo().DropDownList()
            .Name("ddlactive")
            .DataTextField("ACTIVE_TEXT")
            .DataValueField("ACTIVE_ID")
            .HtmlAttributes(new { style = "width:200px;font-size:14px;font-weight:bold" })
            .OptionLabel("Επιλογή...")
            .AutoBind(true)
            .Enable(true)
            .DataSource(source => { source.Read(read => { read.Action("GetActiveSelector", "Station"); }).ServerFiltering(true); })
            .Events(e => { e.Change("ddlchange"); })
        )
    </span>
</div>

<div class="body-content" style="margin:10px 30px 5px 30px;font-size:small">
        @(Html.Kendo().Grid<sqlPersonInfoViewModel>()
        .Name("personnel")
        .Columns(columns =>
        {
            columns.Bound(c => c.ΜΗΤΡΩΟ).Width(12).Groupable(false);
            columns.Bound(c => c.ΟΝΟΜΑΤΕΠΩΝΥΜΟ).Width(30).Groupable(false)
                .ClientFooterTemplate("Συν. πλήθος: #=count#")
                .ClientGroupFooterTemplate("Πλήθος: #=count#");
            columns.Bound(c => c.EIDIKOTITA_CODE).Width(12);
            columns.Bound(c => c.EIDIKOTITA_TEXT).Width(50);
            columns.Bound(c => c.PROSOPIKO_TEXT).Width(24);
            columns.Template(
                @<text></text>)
            .ClientTemplate(
            "<a class=\"k-button k-button-icontext\" href='" + Url.Action("PersonnelEdit", "Station") + "?personId=#=PERSONNEL_ID#' target = _blank><span class=\"k-icon k-edit\"></span>Καρτέλα</a>"
            ).Width(16);
        })
                .Selectable()
                .Groupable()
                .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(10))
                .Filterable()
                .HtmlAttributes(new { style = "display: block;font-size:13px" })
                .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
                .Scrollable(scr => scr.Height(340))
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .PageSize(60)
                    .ServerOperation(false)
                    .Model(model =>
                    {
                        model.Id(p => p.PERSONNEL_ID);
                    })
                    .Read(read => read.Action("PersonnelInfo_Read", "Station").Data("data"))
                    .Aggregates(a =>
                    {
                        a.Add(p => p.ΟΝΟΜΑΤΕΠΩΝΥΜΟ).Count();
                    })
                    .Events(events => events.Error("error_handler"))
                    )
                .Events(events => events.Change("change"))

        )  @* --- data grid ---*@
    </div>

<div id="partialDiv" class="body-content" style="margin:15px 30px 5px 30px;font-size:small">
    @Html.Partial("xPersonnelInfoPartial")
</div>

<script id="events" type="text/javascript">

    function ddlchange() {
        var activeID = this.value();
        $("#personnel").data("kendoGrid").dataSource.read({ activeId: activeID });
        $("#personnel").css("display", "block");
    }

    function data() {
        var activeID = $("#ddlactive").data("kendoDropDownList").value();
        if (activeID) {
            return { activeId: activeID }
        }
        else {
            return { activeId: 0 }
        }
    }

    function change(e) {
        var dataItem = this.dataItem(this.select());
        var personID = dataItem.PERSONNEL_ID;
        // Handle data source of partial view
        $.ajax({
            url: '@Url.Action("GetPersonnelRecord", "Station")?personId=' + personID,
            type: 'GET',
            data: "",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#partialDiv").html(data);
            },
            error: function () {
                MessageBoxAlert("Προέκυψε πρόβλημα ανάκτησης δεδομένων.", "Σφάλμα");
            }
        });
    }

    function RefreshGrid(e) {
        var grid = $("#personnel").data("kendoGrid");
        grid.dataSource.read();

    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
            RefreshGrid(e);
        }
    }

</script>





