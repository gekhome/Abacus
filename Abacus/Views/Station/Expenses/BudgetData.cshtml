@using Abacus.DAL;
@using Abacus.Models;

@{
    ViewBag.Title = "Προϋπολογισμός";
    Layout = "~/Views/Shared/_StationLayout.cshtml";
}

<style>
    .k-grid {
        font-size: 11px;
    }
    .k-calendar {
        font-size: 12px;
    }
</style>


@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 20px 5px 20px">
    <span style="margin:5px 20px 5px 20px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Προϋπολογισμένα ποσά δαπανών σταθμών</font>
    </span>
    <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Station", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrids()">Ανανέωση</button>
    <span style="margin:5px 5px 5px 10px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Εκτύπωση", "BudgetDataPrint", "Station", new { @class = "btn btn-primary", style = "font-size:14px", target = "_blank" })</span>
</div>

<div class="body-content" style="margin:5px 20px 5px 20px;background-color:dimgray;padding:4px 4px 4px 4px;min-height:40px">
    <span style="margin:2px;float:left;font-family:'Segoe UI';">
        <label style="font-size:14px;font-weight:bold;color:white">Σχολικό έτος : </label>
        @(Html.Kendo().DropDownList()
            .Name("ddlschoolyear")
            .DataTextField("ΣΧΟΛΙΚΟ_ΕΤΟΣ")
            .DataValueField("SCHOOLYEAR_ID")
            .HtmlAttributes(new { style = "width:160px;font-size:14px;font-weight:bold" })
            .OptionLabel("Επιλογή...")
            .AutoBind(true)
            .Enable(true)
            .DataSource(source => { source.Read(read => { read.Action("GetSchoolYears", "Station"); }).ServerFiltering(true); })
            .Events(e =>
            {
                e.Select("syearSelect");
            })
        )
    </span>
    <span style="margin:2px;float:left;font-family:'Segoe UI';">
        <label id="month" style="margin-left:10px;margin-right:5px;font-size:14px;font-weight:bold;color:white;font-family:'Segoe UI'">Μήνας : </label>
        @(Html.Kendo().DropDownList()
        .Name("ddlmonth")
        .DataTextField("ΜΗΝΑΣ")
        .DataValueField("ΜΗΝΑΣ_ΚΩΔ")
        .HtmlAttributes(new { style = "width:200px;font-size:14px;font-weight:bold" })
        .OptionLabel("Επιλογή ...")
        .AutoBind(true)
        .Enable(true)
        .DataSource(source => { source.Read(read => { read.Action("GetMonths", "Station"); }).ServerFiltering(true); })
        .Events(e =>
        {
            e.Select("monthSelect");
        })
        )
    </span>
</div>

<div class="body-content" style="margin:5px 30px 5px 30px;font-size:small">
    @(Html.Kendo().Grid<BudgetDataViewModel>()
        .Name("Grid")
        .AutoBind(true)
        .HtmlAttributes(new { style = "display: block;font-size:14px" })
        .Filterable()
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .Scrollable(scr => scr.Height(400))
        .Columns(columns =>
        {
            columns.ForeignKey(f => f.STATION_ID, (IEnumerable<ΣΥΣ_ΣΤΑΘΜΟΙ>)ViewData["stations"], "ΣΤΑΘΜΟΣ_ΚΩΔ", "ΕΠΩΝΥΜΙΑ").Width(40);
            columns.Bound(c => c.BUDGET_CLEAN).Width(30);
            columns.Bound(c => c.BUDGET_OTHER).Width(35);
            columns.Bound(c => c.BUDGET_FOOD).Width(35);
        })
        .DataSource(ds => ds
            .Ajax()
            .Batch(false)
            .PageSize(30)
            .ServerOperation(true)
            .Model(model =>
            {
                model.Id(p => p.BUDGET_ID);
                model.Field(p => p.STATION_ID).DefaultValue(ViewData["defaultStation"]);
            })
            .Read(read => read.Action("BudgetMonth_Read", "Station").Data("data"))
            .Events(events => events.Error("error_handler"))
        )
    )
</div>

<script id="grid-events" type="text/javascript">

    function transferMonth() {
        var syearID = $("#ddlschoolyear").data("kendoDropDownList").value();
        var monthID = $("#ddlmonth").data("kendoDropDownList").value();
        var message = "Να γίνει η μεταφορά των στοιχείων του επιλεγμένου μήνα στον αμέσως επόμενο μήνα;"

        if (!syearID || !monthID) {
            MessageBoxAlert("Πρέπει να επιλέξετε σχολικό έτος και μήνα για μεταφορά.", "Σφάλμα");
            return;
        }

        var params = {
            schoolyearId: syearID,
            monthId: monthID
        }

        MessageBoxConfirm(message, "Μεταφορά μήνα").done(function () {
            $.ajax({
                url: '@Url.Action("TransferBudgetMonth", "Station")',
                type: 'POST',
                data: JSON.stringify(params),
                contentType: 'application/json; charset=utf-8',
                success: function (out) {
                    if (out) MessageBoxAlert(out, "Μήνυμα");
                },
                error: function () {
                    MessageBoxAlert("Προέκυψε σφάλμα. Δοκιμάστε πάλι αργότερα.", "Σφάλμα");
                }
            });
        }).fail(function () {
            return;
        });
    }

    function transferYear() {
        var syearID = $("#ddlschoolyear").data("kendoDropDownList").value();
        var message = "Να γίνει η μεταφορά των στοιχείων του επιλεγμένου έτους στο αμέσως επόμενο έτος;"

        if (!syearID) {
            MessageBoxAlert("Πρέπει να επιλέξετε σχολικό έτος για τη μεταφορά του.", "Σφάλμα");
            return;
        }

        var params = {
            schoolyearId: syearID
        }

        MessageBoxConfirm(message, "Μεταφορά έτους").done(function () {
            $.ajax({
                url: '@Url.Action("TransferBudgetYear", "Station")',
                type: 'POST',
                data: JSON.stringify(params),
                contentType: 'application/json; charset=utf-8',
                success: function (out) {
                    if (out) MessageBoxAlert(out, "Μήνυμα");
                },
                error: function () {
                    MessageBoxAlert("Προέκυψε σφάλμα. Δοκιμάστε πάλι αργότερα.", "Σφάλμα");
                }
            });
        }).fail(function () {
            return;
        });
    }

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

    function syearSelect(e) {
        var dataItem = this.dataItem(e.item.index());
        var monthID = $("#ddlmonth").data("kendoDropDownList").value();

        if (monthID && dataItem) {
            var syearID = dataItem.SCHOOLYEAR_ID;
            $("#Grid").data("kendoGrid").dataSource.read({ schoolyearId: syearID, monthId: monthID });
        }
        else {
            $("#Grid").data("kendoGrid").dataSource.read({ schoolyearId: 0, monthId: 0 });
        }
    };

    function monthSelect(e) {
        var monthID = 0;
        var dataItem = this.dataItem(e.item.index());
        var syearID = $("#ddlschoolyear").data("kendoDropDownList").value();
        if (dataItem) {
            monthID = dataItem.ΜΗΝΑΣ_ΚΩΔ;
        }

        if (monthID && syearID) {
            $("#Grid").data("kendoGrid").dataSource.read({ schoolyearId: syearID, monthId: monthID });
        }
        else {
            MessageBoxAlert("Πρέπει να επιλέξετε σχολικό έτος και μήνα για προβολή ή καταχώρηση των στοιχείων.")
        }
    };

    // this is used for fetching the data
    function data() {
        var syearID = $("#ddlschoolyear").data("kendoDropDownList").value();
        var monthID = $("#ddlmonth").data("kendoDropDownList").value();

        if (monthID && syearID) {
            return {
                schoolyearId: syearID,
                monthId: monthID
            }
        }
        else {
            return {
                schoolyearId: 0,
                monthId: 0
            }
        }
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
            RefreshGrid(e);
        }
    }

</script>

