@using Abacus.DAL;
@using Abacus.Models;

@{
    ViewBag.Title = "Ευρετήριο προϊόντων";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .k-grid {
        font-size: 12px;
    }
</style>


@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Ευρετήριο προϊόντων</font>
    </span>
    <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <span style="margin:5px 5px 5px 10px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Εκτύπωση", "xProductsPrint", "Admin", new { @class = "btn btn-primary", style = "font-size:14px", target = "_blank" })</span>
    @*<button class="btn btn-danger" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="updateExpenses()">Ενημέρωση δαπανών</button>
    <button class="btn btn-danger" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="stationProducts()">Προϊόντα σταθμών</button>*@
    <div id="divLoading" style="margin:0px 15px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px; z-index: 30001;display:none">
        <p id="message-icon" style="margin-right:5px; font-size:13px;color:#00008b">
            Διαιδκασία σε εξέλιξη. Περιμένετε...<img id="ajax-icon" src="~/Images/other/progress4.gif" style="margin-left:5px;width:36px;height:36px">
        </p>
    </div>
</div>

<div class="body-content" style="margin:5px 20px 5px 20px;background-color:dimgray;padding:4px 4px 4px 4px">
    <label style="margin-left:5px;font-size:13px;font-weight:bold;color:white">ΒΝΣ : </label>
    @(Html.Kendo().DropDownList()
        .Name("ddlstation")
        .DataTextField("ΕΠΩΝΥΜΙΑ")
        .DataValueField("ΣΤΑΘΜΟΣ_ΚΩΔ")
        .HtmlAttributes(new { style = "width:300px;font-size:13px;font-weight:bold" })
        .OptionLabel("Επιλογή σταθμού...")
        .AutoBind(true)
        .Enable(true)
        .DataSource(source => { source.Read(read => { read.Action("GetStations", "Admin"); }).ServerFiltering(true); })
        .Events(e =>
        {
            e.Select("ddlselect");
        })
    )
</div>

<div class="body-content" style="margin:10px 30px 5px 30px;font-size:small">

        @(Html.Kendo().Grid<sqlProductListViewModel>()
        .Name("Grid")
        .AutoBind(true)
        .HtmlAttributes(new { style = "display: block;font-size:13px" })
        .Groupable()
        .Filterable()
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(10))
        .Scrollable(scr => scr.Height(420))
        .Columns(columns =>
        {
            columns.Bound(c => c.ΚΑΤΗΓΟΡΙΑ).Width(40);
            columns.Bound(c => c.ΠΡΟΙΟΝ_ΛΕΚΤΙΚΟ).Width(100).Groupable(false);
            columns.Bound(c => c.ΜΟΝΑΔΑ).Width(25);
            columns.ForeignKey(f => f.ΠΡΟΙΟΝ_ΦΠΑ, (IEnumerable<ΦΠΑ_ΤΙΜΕΣ>)ViewData["vat_values"], "FPA_ID", "FPA_VALUE").Width(20);
        })
        .DataSource(ds => ds
            .Ajax()
            .Batch(false)
            .PageSize(60)
            .ServerOperation(false)
            .Model(model =>
            {
                model.Id(p => p.ΠΡΟΙΟΝ_ΚΩΔ);
            })
            .Read(read => read.Action("ProductList_Read", "Admin").Data("data"))
            .Events(events => events.Error("error_handler"))
        )
        )

</div>

<script type="text/javascript">

    function ddlselect(e) {
        var stationID = 0;
        var dataItem = this.dataItem(e.item.index());
        if (dataItem) {
            stationID = dataItem.ΣΤΑΘΜΟΣ_ΚΩΔ;
        }

        if (stationID) {
            $("#Grid").data("kendoGrid").dataSource.read({ stationId: stationID });
        }
        else {
            MessageBoxAlert("Πρέπει να επιλέξετε σταθμό και ημερομηνίες για προβολή των δαπανών.")
        }
    };

    function data() {
        var stationID = $("#ddlstation").data("kendoDropDownList").value();

        if (stationID) {
            return { stationId: stationID }
        }
        else {
            return { stationId: 0 }
        }
    }

    function stationProducts() {
        var message = "Να γίνει η δημιουργία λίστας προϊόντων για κάθε σταθμό;"

        MessageBoxConfirm(message, "Δημιουργία προϊόντων").done(function () {
            $('#divLoading').show();
            $.ajax({
                url: '@Url.Action("CreateStationProducts", "Admin")',
                type: 'GET',
                data: "",
                contentType: 'application/json; charset=utf-8',
                success: function (out) {
                    $('#divLoading').hide();
                    if (out) MessageBoxAlert(out, "Μήνυμα");
                },
                error: function () {
                    MessageBoxAlert("Προέκυψε σφάλμα. Δοκιμάστε πάλι αργότερα.", "Σφάλμα");
                }
            });
        }).fail(function () {
            return;
        });
    }

    function updateExpenses() {
        var message = "Να γίνει η ενημέρωση κωδικών προϊόντων στις δαπάνες των σταθμών;"

        MessageBoxConfirm(message, "Ενημέρωση δαπανών").done(function () {
            $('#divLoading').show();
            $.ajax({
                url: '@Url.Action("UpdateStationExpenses", "Admin")',
                type: 'GET',
                data: "",
                contentType: 'application/json; charset=utf-8',
                success: function (out) {
                    $('#divLoading').hide();
                    if (out) MessageBoxAlert(out, "Μήνυμα");
                },
                error: function () {
                    MessageBoxAlert("Προέκυψε σφάλμα. Δοκιμάστε πάλι αργότερα.", "Σφάλμα");
                }
            });
        }).fail(function () {
            return;
        });
    }

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
        RefreshGrid(e);
    }

</script>

