@model IEnumerable<Abacus.Models.UserAdminViewModel>

@{
    ViewBag.Title = "Λογαριασμοί διαχειριστών";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 60px 10px 60px">
    <span style="margin:5px 60px 5px 60px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#292929;float:left;font-family:'Segoe UI'">Λογαριασμοί διαχειριστών</font>
    </span>
    <span style="margin:5px 10px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-success" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
    <span style="margin:5px 5px 5px 10px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Εκτύπωση", "Index", "Admin", null, new { @class = "btn btn-primary", style = "font-size:14px" })</span>
</div>
<div class="body-content" style="margin:10px 60px 5px 60px">
    @(Html.Kendo().Grid(Model)
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.USERNAME).Groupable(false).Width(40)
                .ClientFooterTemplate("Συνολ. πλήθος: #=count#")
                .ClientGroupFooterTemplate("Πλήθος: #=count#");
            columns.Bound(c => c.PASSWORD).Groupable(false).Width(30);
            columns.Bound(c => c.FULLNAME).Groupable(false).Width(60);
            columns.Bound(c => c.ISACTIVE).Width(24);
            columns.Bound(c => c.CREATEDATE).Groupable(false).Width(30).Format("{0:dd/MM/yyyy}");
            columns.Command(command => command.Destroy().Text("Διαγραφή")).Width(32);
        })
        .ToolBar(toolBar =>
        {
            toolBar.Create();
            toolBar.Save();
        })
        .Editable(editable => editable.Mode(GridEditMode.InCell))
        .Filterable()
        .Groupable()
        .Scrollable(scr => scr.Height(300))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .DataSource(datasource => datasource
        .Ajax()
        .Batch(true)
        .PageSize(20)
        .ServerOperation(false)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.USER_ID))
            .Create("List_Create", "USER_ADMINS")
            .Read("List_Read", "USER_ADMINS")
            .Update("List_Update", "USER_ADMINS")
            .Destroy("List_Destroy", "USER_ADMINS")
            .Events(events => events.Error("error_handler"))
            .Aggregates(a =>
            {
                a.Add(p => p.USERNAME).Count();
            })
        )
        .Resizable(resize => resize.Columns(true))
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
    )
</div>

<script type="text/javascript">

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
        $("#Grid").data("kendoGrid").dataSource.read();
    }

</script>






