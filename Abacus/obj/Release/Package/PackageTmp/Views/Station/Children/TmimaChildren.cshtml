@using Abacus.DAL;
@using Abacus.Models;


@{
    ViewBag.Title = "Τμήματα βρεφονηπίων";
    Layout = "~/Views/Shared/_StationLayout.cshtml";
}

<style>
    .k-grid {
        font-size: 12px;
    }
</style>


@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Καταστάσεις τμημάτων βρεφονηπίων</font>
    </span>
    <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Station", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
</div>

<div class="body-content" style="margin:10px 30px 5px 30px;font-size:small">
        @(Html.Kendo().Grid<sqlTmimaInfoViewModel>()
        .Name("Master")
        .Columns(columns =>
        {
            columns.ForeignKey(f => f.SCHOOLYEAR_ID, (IEnumerable<ΣΥΣ_ΣΧΟΛΙΚΑ_ΕΤΗ>)ViewData["schoolYears"], "SCHOOLYEAR_ID", "ΣΧΟΛΙΚΟ_ΕΤΟΣ").Width(20);
            columns.Bound(c => c.ΤΜΗΜΑ_ΟΝΟΜΑ).Width(40).Groupable(false);
            columns.Template(
                @<text></text>)
            .ClientTemplate(
            "<a class=\"k-button k-button-icontext\" href='" + Url.Action("DocKatastasiGenikiPrint", "Station") + "?tmimaId=#=ΤΜΗΜΑ_ΚΩΔ#' target = _blank><span class=\"k-icon k-justifyFull\"></span>Εκτύπωση</a>"
            ).Width(16);
        })
            .Groupable()
            .Navigatable()
            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(10))
            .Selectable()
            .Filterable()
            .HtmlAttributes(new { style = "display: block;font-size:12px" })
            .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
            .Scrollable(scr => scr.Height(200))
            .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(60)
            .ServerOperation(false)
            .Model(model =>
            {
                model.Id(p => p.ΤΜΗΜΑ_ΚΩΔ);
            })
            .Read(read => read.Action("Tmimata_Read", "Station"))
            .Events(events => events.Error("error_handler1"))
            )
            .Events(events => events.Change("change"))
        )
    </div>

<div class="body-content" style="margin:10px 30px 5px 30px;font-size:small">
        @(Html.Kendo().Grid<sqlTmimaChildViewModel>()
        .Name("Child")
        .AutoBind(false)
        .HtmlAttributes(new { style = "display: block;font-size:12px" })
        .Navigatable()
        .Filterable()
        .Groupable()
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .Scrollable(scr => scr.Height(280))
        .Columns(columns =>
        {
            columns.Bound(c => c.ΑΜ).Width(12).Groupable(false);
            columns.Bound(c => c.ΟΝΟΜΑΤΕΠΩΝΥΜΟ).Width(40).Groupable(false)
                .ClientFooterTemplate("Συν. πλήθος: #=count#")
                .ClientGroupFooterTemplate("Πλήθος: #=count#");
            columns.Bound(c => c.ΦΥΛΟ).Width(16);
            columns.Bound(c => c.ΗΛΙΚΙΑ).Width(20);
            columns.Bound(c => c.ΗΜΝΙΑ_ΕΓΓΡΑΦΗ).Width(16);
            columns.Bound(c => c.ΠΑΤΡΩΝΥΜΟ).Width(32);
        })
        .DataSource(ds => ds
            .Ajax()
            .Batch(false)
            .PageSize(40)
            .ServerOperation(false)
            .Model(model =>
            {
                model.Id(p => p.CHILD_ID);
            })
            .Read(read => read.Action("TmimaChildren_Read", "Station").Data("data"))
            .Aggregates(a =>
            {
                a.Add(p => p.ΟΝΟΜΑΤΕΠΩΝΥΜΟ).Count();
            })
            .Events(events => events.Error("error_handler2"))
        )
        )
</div>

<script type="text/javascript">

    var options = null;

    function RefreshGrid(e) {
        var grid = $("#Master").data("kendoGrid");
        grid.dataSource.read();
    }

    function change(e) {
        var dataItem = this.dataItem(this.select());
        var tmimaID = dataItem.ΤΜΗΜΑ_ΚΩΔ;

        $("#Child").data("kendoGrid").dataSource.read({ tmimaId: tmimaID });
        $("#Child").css("display", "block");
    }

    function data() {
        var masterGrid = $("#Master").data("kendoGrid");
        // get data item for selected row
        var dataItem = masterGrid.dataItem(masterGrid.select());
        if (dataItem) {
            return { tmimaId: dataItem.ΤΜΗΜΑ_ΚΩΔ };
        }
        else {
            return { tmimaId: 0 };
        }
    }

    function error_handler1(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
        $("#Master").data("kendoGrid").dataSource.read();
    }

    function error_handler2(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
        $("#Child").data("kendoGrid").dataSource.read();
    }

</script>

