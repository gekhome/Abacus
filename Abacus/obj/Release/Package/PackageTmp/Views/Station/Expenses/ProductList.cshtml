@using Abacus.DAL;
@using Abacus.Models;

@{
    ViewBag.Title = "Ευρετήριο προϊόντων";
    Layout = "~/Views/Shared/_StationLayout.cshtml";
}

<style>
    .k-grid {
        font-size: 12px;
    }
</style>


@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Ευρετήριο προϊόντων διατροφής και λοιπών ειδών</font>
    </span>
    <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Station", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
    <span style="margin:5px 5px 5px 10px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Εκτύπωση", "ProductsPrint", "Station", new { @class = "btn btn-primary", style = "font-size:14px", target = "_blank" })</span>
</div>

<div class="body-content" style="margin:10px 30px 5px 30px;font-size:small">

        @(Html.Kendo().Grid<sqlProductListViewModel>()
        .Name("Grid")
        .AutoBind(true)
        .HtmlAttributes(new { style = "display: block;font-size:12px" })
        .Groupable()
        .Filterable()
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(10))
        .Scrollable(scr => scr.Height(460))
        .Columns(columns =>
        {
            columns.Bound(c => c.ΚΑΤΗΓΟΡΙΑ).Width(40);
            columns.Bound(c => c.ΠΡΟΙΟΝ_ΛΕΚΤΙΚΟ).Width(100).Groupable(false);
            columns.Bound(c => c.ΜΟΝΑΔΑ).Width(25);
            columns.ForeignKey(f => f.ΠΡΟΙΟΝ_ΦΠΑ, (IEnumerable<ΦΠΑ_ΤΙΜΕΣ>)ViewData["vat_values"], "FPA_ID", "FPA_VALUE").Width(20);
        })
        .DataSource(ds => ds
            .Ajax()
            .Batch(false)
            .PageSize(60)
            .ServerOperation(false)
            .Model(model =>
            {
                model.Id(p => p.ΠΡΟΙΟΝ_ΚΩΔ);
            })
            .Read(read => read.Action("ProductList_Read", "Station"))
            .Events(events => events.Error("error_handler"))
        )
        )

</div>

<script type="text/javascript">

    var options = null;

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
        $("#Master").data("kendoGrid").dataSource.read();
    }

</script>

