@using Abacus.DAL;
@using Abacus.Models;

@{
    ViewBag.Title = "Τροφείο ανά άτομο";
    Layout = "~/Views/Shared/_StationLayout.cshtml";
}

<style>
    .k-grid {
        font-size: 12px;
    }
</style>


@Html.AntiForgeryToken()
<div class="page-header" style="margin:5px 30px 5px 30px">
    <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
        <font style="color:#494949;float:left;font-family:'Segoe UI'">Εγκριθέντα ποσά ημερήσιου τροφείου ανά άτομο</font>
    </span>
    <span style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Station", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
    <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
</div>
<p></p>
<div class="body-content" style="margin:5px 30px 5px 30px;background-color:dimgray;padding:2px;min-height:38px">
    <span style="margin:2px;float:left;font-family:'Segoe UI';">
        <label style="font-size:14px;font-weight:bold;color:white">Σχολικό έτος : </label>
        @(Html.Kendo().DropDownList()
            .Name("ddlSchoolYear")
            .DataTextField("ΣΧΟΛΙΚΟ_ΕΤΟΣ")
            .DataValueField("SCHOOLYEAR_ID")
            .HtmlAttributes(new { style = "width:160px;font-size:14px;font-weight:bold" })
            .OptionLabel("Επιλογή...")
            .AutoBind(true)
            .Enable(true)
            .DataSource(source => { source.Read(read => { read.Action("GetSchoolYears", "Station"); }).ServerFiltering(true); })
            .Events(e =>
            {
                e.Select("ddlselect");
            })
        )
    </span>
</div>

<div class="body-content" style="margin:5px 30px 5px 30px;font-size:small">
        @(Html.Kendo().Grid<PersonCostDayViewModel>()
        .Name("Grid")
        .AutoBind(true)
        .HtmlAttributes(new { style = "display: block;font-size:14px" })
        .Navigatable()
        .Filterable()
        .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .Scrollable(scr => scr.Height(420))
        .Columns(columns =>
        {
            columns.ForeignKey(f => f.STATION_ID, (IEnumerable<ΣΥΣ_ΣΤΑΘΜΟΙ>)ViewData["stations"], "ΣΤΑΘΜΟΣ_ΚΩΔ", "ΕΠΩΝΥΜΙΑ").Width(70);
            columns.Bound(c => c.COST_PERSON).Width(25);
        })
        .DataSource(ds => ds
            .Ajax()
            .Batch(false)
            .PageSize(30)
            .ServerOperation(true)
            .Model(model =>
            {
                model.Id(p => p.ID);
                model.Field(p => p.STATION_ID).DefaultValue(ViewData["defaultStation"]);
            })
            .Read(read => read.Action("PersonCost_Read", "Station").Data("data"))
            .Events(events => events.Error("error_handler"))
        )
        )
    </div>

<script type="text/javascript">

    function ddlselect(e) {
        var dataItem = this.dataItem(e.item.index());

        if (dataItem) {
            var syearID = dataItem.SCHOOLYEAR_ID;
            $("#Grid").data("kendoGrid").dataSource.read({ schoolyearId: syearID });
        }
        else {
            $("#Grid").data("kendoGrid").dataSource.read({ schoolyearId: 0 });
        }
    };


    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

    function data() {
        var syearID = $("#ddlSchoolYear").data("kendoDropDownList").value();
        // get data item for selected row
        if (syearID) {
            return { schoolyearId: syearID };
        }
        else {
            return { schoolyearId: 0 };
        }
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
        $("#Grid").data("kendoGrid").dataSource.read();
    }

</script>

