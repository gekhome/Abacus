@using Abacus.DAL;
@using Abacus.Models;

@{
    ViewBag.Title = "Κατηγορίες γενικών δαπανών";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@*<style>
    .k-grid .k-alt {
        background-color: #e9e9e9; /* specify the alternate background-color */
    }
</style>*@

    @Html.AntiForgeryToken()
    <div class="page-header" style="margin:5px 30px 5px 30px">
        <span style="margin:5px 30px 5px 30px;font-family:'Segoe UI';font-size:large;text-shadow:1px 1px #000000">
            <font style="color:#494949;float:left;font-family:'Segoe UI'">Κατηγορίες γενικών δαπανών</font>
        </span>
        <span style="margin:5px 10px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px">@Html.ActionLink("Επιστροφή", "Index", "Admin", null, new { @class = "btn btn-warning", style = "font-size:14px" })</span>
        <button class="btn btn-info" style="margin:5px 5px 5px 5px;float:right;font-family:'Segoe UI';font-size:14px" onclick="RefreshGrid()">Ανανέωση</button>
    </div>

    <div class="body-content" style="margin:5px 30px 5px 30px">

        @(Html.Kendo().Grid<ExtraCategoryViewModel>()
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(m => m.ΚΑΤΗΓΟΡΙΑ).Width(80);
            columns.ForeignKey(f => f.ΔΑΠΑΝΗ_ΚΩΔ, (IEnumerable<ΔΑΠΑΝΕΣ_ΕΙΔΗ>)ViewData["expense_types"], "ΕΙΔΟΣ_ΚΩΔ", "ΕΙΔΟΣ_ΛΕΚΤΙΚΟ").Width(30);
            columns.Command(command => { command.Edit(); command.Destroy(); }).Width(34);
        })
            .ToolBar(toolBar =>
            {
                toolBar.Create();
            })
            .HtmlAttributes(new { style = "display:block;font-size:14px" })                    
            .Editable(editable => editable.Mode(GridEditMode.InLine).CreateAt(GridInsertRowPosition.Top))
            .Navigatable()
            .Filterable()
            .Sortable(sortable => sortable.AllowUnsort(true).SortMode(GridSortMode.MultipleColumn))
            .Scrollable(scr => scr.Height(380))
            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
            .DataSource(datasource => datasource
                .Ajax()
                .PageSize(40)
                .ServerOperation(false)
                .Model(model =>
                {
                    model.Id(p => p.ΚΑΤΗΓΟΡΙΑ_ΚΩΔ);
                    model.Field(p => p.ΔΑΠΑΝΗ_ΚΩΔ).DefaultValue(3);
                })
                .Create(create => create.Action("ExtraCategory_Create", "Admin"))
                .Read(read => read.Action("ExtraCategory_Read", "Admin"))
                .Update(update => update.Action("ExtraCategory_Update", "Admin"))
                .Destroy(destroy => destroy.Action("ExtraCategory_Destroy", "Admin"))
                .Events(events => events.Error("error_handler"))                      
            ) @* datasource*@
        )

    </div>

<script type="text/javascript">

    function RefreshGrid(e) {
        var grid = $("#Grid").data("kendoGrid");
        grid.dataSource.read();
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "<br/>";
                    });
                }
            });
            MessageBoxAlert(message, "Σφάλμα");
        }
        RefreshGrid(e);
    }

</script>

